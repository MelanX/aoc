define read_start() {
    define line [readln stdin]
    define num [str-substring $line [+ 2 [str-last-index-of $line ":"]]]
    is [string->int $num]
}

define pos1 [read_start]
define pos2 [read_start]

define move_by(current; dice) {
    is [+ [% [- [+ $current $dice] 1] 10] 1]
}

define score_by(current; dice; score) {
    is [+ $score [move_by $current $dice]]
}

define step(current_player; pos1; score1; pos2; score2) {
    if { or [>= $score1 21] [>= $score2 21] } {
        if { >= $score1 21 } { is ( 1.0 0.0 ) } { is ( 0.0 1.0 ) }
    } {
        if { is $current_player } {
            define r3 [step [not $current_player] [move_by $pos1 3] [score_by $pos1 3 $score1] $pos2 $score2]
            define r4 [step [not $current_player] [move_by $pos1 4] [score_by $pos1 4 $score1] $pos2 $score2]
            define r5 [step [not $current_player] [move_by $pos1 5] [score_by $pos1 5 $score1] $pos2 $score2]
            define r6 [step [not $current_player] [move_by $pos1 6] [score_by $pos1 6 $score1] $pos2 $score2]
            define r7 [step [not $current_player] [move_by $pos1 7] [score_by $pos1 7 $score1] $pos2 $score2]
            define r8 [step [not $current_player] [move_by $pos1 8] [score_by $pos1 8 $score1] $pos2 $score2]
            define r9 [step [not $current_player] [move_by $pos1 9] [score_by $pos1 9 $score1] $pos2 $score2]
            is (
              [+ 0.0 [* 1.0 [nth $r3 0]] [* 3.0 [nth $r4 0]] [* 6.0 [nth $r5 0]] [* 7.0 [nth $r6 0]] [* 6.0 [nth $r7 0]] [* 3.0 [nth $r8 0]] [* 1.0 [nth $r9 0]]]
              [+ 0.0 [* 1.0 [nth $r3 1]] [* 3.0 [nth $r4 1]] [* 6.0 [nth $r5 1]] [* 7.0 [nth $r6 1]] [* 6.0 [nth $r7 1]] [* 3.0 [nth $r8 1]] [* 1.0 [nth $r9 1]]]
            )
        } {
            define r3 [step [not $current_player] $pos1 $score1 [move_by $pos2 3] [score_by $pos2 3 $score2]]
            define r4 [step [not $current_player] $pos1 $score1 [move_by $pos2 4] [score_by $pos2 4 $score2]]
            define r5 [step [not $current_player] $pos1 $score1 [move_by $pos2 5] [score_by $pos2 5 $score2]]
            define r6 [step [not $current_player] $pos1 $score1 [move_by $pos2 6] [score_by $pos2 6 $score2]]
            define r7 [step [not $current_player] $pos1 $score1 [move_by $pos2 7] [score_by $pos2 7 $score2]]
            define r8 [step [not $current_player] $pos1 $score1 [move_by $pos2 8] [score_by $pos2 8 $score2]]
            define r9 [step [not $current_player] $pos1 $score1 [move_by $pos2 9] [score_by $pos2 9 $score2]]
            is (
              [+ 0.0 [* 1.0 [nth $r3 0]] [* 3.0 [nth $r4 0]] [* 6.0 [nth $r5 0]] [* 7.0 [nth $r6 0]] [* 6.0 [nth $r7 0]] [* 3.0 [nth $r8 0]] [* 1.0 [nth $r9 0]]]
              [+ 0.0 [* 1.0 [nth $r3 1]] [* 3.0 [nth $r4 1]] [* 6.0 [nth $r5 1]] [* 7.0 [nth $r6 1]] [* 6.0 [nth $r7 1]] [* 3.0 [nth $r8 1]] [* 1.0 [nth $r9 1]]]
            )
        }
    }
}

define result [step [== 0 0] $pos1 0 $pos2 0]
echo [max [nth $result 0] [nth $result 1]]
